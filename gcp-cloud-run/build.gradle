plugins {
    id 'com.google.cloud.tools.jib'
    id 'org.springframework.boot'
}
apply from: project(":").file('gradle/java.gradle')

dependencies {
    implementation project(':common:rest-spring-api')
    implementation project(':common:transform')
    implementation project(':local-rest-scorer')
    implementation group: 'ai.h2o', name: 'mojo2-runtime-api'
    implementation group: 'ai.h2o', name: 'mojo2-runtime-impl'
    implementation group: 'io.springfox', name: 'springfox-swagger2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'com.google.cloud', name: 'google-cloud-storage'
}

test {
    useJUnitPlatform()
}

bootRun {
    systemProperties System.properties
}

bootJar {
    mainClassName = 'ai.h2o.mojos.deploy.gcp.cloud.run.ScorerApplication'
}

// Include the local rest scorer executable jar in the root package distribution zip file.
rootProject.distributionZip {
    dependsOn bootJar
    into(this.project.path.replace(":", "/")) {
        from bootJar.archivePath
    }
}

// Docker image configuration.
jib {
    from {
        image = 'openjdk:8-jre-alpine'
    }
    to {
        image = dockerRepositoryPrefix + 'google-cloud-run-scorer'
        tags = [version]
    }
    container {
        jvmFlags = ['-Dmojo.path=/mojos/pipeline.mojo']
        ports = ['8080']
        volumes = [
                // For storing the mojo2 file with the model to be used for scoring.
                '/mojos',
                // For the DAI license file.
                '/secrets',
        ]
        environment = [
                // The expected path to the DAI license file.
                DRIVERLESS_AI_LICENSE_FILE: '/secrets/license.sig',
        ]
    }
}

tasks.build.dependsOn tasks.jibBuildTar