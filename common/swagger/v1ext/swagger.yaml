openapi: 3.0.0
info:
  title: Scoring API - v1
  description: This is a definition of the REST API for scoring from H2O. This API is intended to be used within DAI and eventually across all H2O scoring systems
  termsOfService: ""
  contact:
    email: support@h2o.ai
  license:
    name: License
    url: https://www.h2o.ai
  version: 1.3.0-oas3
servers:
  - url: /
paths:
  /model/score:
    get:
      tags:
      - scoring
      summary: Score on given file
      description: Computes score of the rows in the file specified by the path in the query parameter
      operationId: getScoreByFile
      parameters:
      - name: file
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResponse'
        "400":
          description: Invalid payload
          content: {}
        "501":
          description: Implementation not supported
          content: { }
    post:
      tags:
      - scoring
      summary: Score on given rows
      description: Computes score of the rows sent in the body of the post request
      operationId: getScore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResponse'
        "400":
          description: Invalid payload
          content: {}
        "501":
          description: Implementation not supported
          content: {}
      x-codegen-request-body-name: payload
components:
  schemas:
    PredictionInterval:
      type: object
      description: |
        Prediction interval consist of an array of target field name ends with supported interval type (`.lower`, `.upper`),
        and rows of array of scoring result for interval types per row.
        By setting `requestPredictionIntervals` be true will enable populating the field, the field
        will be empty and an error response may be returned if it is not supported.
      properties:
        fields:
          $ref: '../v1/swagger.yaml#/definitions/Row'
        rows:
          type: array
          items:
            $ref: '../v1/swagger.yaml#/definitions/Row'
    ScoreRequest:
      allOf:
        - $ref: '../v1/swagger.yaml#/definitions/ScoreRequest'
        - properties:
            requestPredictionIntervals:
              type: boolean
              description: |
                If set to `true`. The scorer will try to fill field `predictionIntervals` in response if it is supported.
    ScoreResponse:
      allOf:
        - $ref: '../v1/swagger.yaml#/definitions/ScoreResponse'
        - properties:
            predictionIntervals:
              $ref: '#/components/schemas/PredictionInterval'
