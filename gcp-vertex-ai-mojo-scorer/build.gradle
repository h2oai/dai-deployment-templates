plugins {
    id 'com.google.cloud.tools.jib'
    id 'org.springframework.boot'
}
apply from: project(":").file('gradle/java.gradle')

dependencies {
    implementation project(':common:rest-vertex-ai-spring-api')
    implementation project(':common:rest-spring-api')
    implementation project(':common:transform')
    implementation group: 'ai.h2o', name: 'h2o-genmodel'
    implementation group: 'ai.h2o', name: 'h2o-genmodel-ext-xgboost'
    implementation group: 'ai.h2o', name: 'mojo2-runtime-api'
    implementation group: 'ai.h2o', name: 'mojo2-runtime-h2o3-impl'
    implementation group: 'ai.h2o', name: 'mojo2-runtime-impl'
    implementation group: 'io.springfox', name: 'springfox-swagger2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.slf4j', name: 'slf4j-api'
    implementation group: 'com.google.cloud', name: 'google-cloud-storage'
    
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'com.google.truth.extensions', name: 'truth-java8-extension'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

bootRun {
    systemProperties System.properties
}

bootJar {
    mainClassName = 'ai.h2o.mojos.deploy.gcp.vertex.ai.GcpVertexAiApplication'
    archiveClassifier = 'boot'
}

jar {
    enabled = true
}

// Docker image configuration.
jib {
    from {
        image = 'openjdk:8-jre-alpine'
    }
    to {
        image = dockerRepositoryPrefix + 'google-vertex-ai-scorer'
        tags = [version]
    }
    container {
        jvmFlags = ['-Dmojo.path=/tmp/pipeline.mojo']
        ports = ['8080']
        environment = [
                // The expected path to the DAI license file.
                DRIVERLESS_AI_LICENSE_FILE: '/tmp/license.sig',
        ]
    }
}

tasks.build.dependsOn tasks.jibBuildTar
