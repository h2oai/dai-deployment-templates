version = 1.1.11-SNAPSHOT

# Versions of dependencies. Try to keep these at the same version across the deployment templates to facilitate
# issue resolution.

# Internal dependencies:
h2oVersion = 3.32.0.2
mojoRuntimeVersion = 2.7.5

# External dependencies:
awsLambdaCoreVersion = 1.2.0
awsLambdaEventsVersion = 2.2.3
awsSdkS3Version = 1.11.445
javaxAnnotationVersion = 1.3.2
gsonVersion = 2.8.5
jupiterVersion = 5.3.1
jupiterSystemStubsVersion = 1.2.0
mockitoVersion = 3.0.0
springFoxVersion = 3.0.0
swaggerCodegenVersion = 3.0.0
swaggerCoreVersion = 2.0.5
swaggerCoreSpringVersion = 1.5.21
shadowJarVersion = 4.0.4
slf4jVersion = 1.7.30
log4jVersion = 2.17.1
apacheCommonsCliVersion = 1.4
truthVersion = 0.42
guavaVersion = 30.1.1-jre
googleStorageVersion = 1.112.0
sparkVersion = 2.4.4
scalaVersion = 2.11.12
sparklingWaterVersion = 3.28.0.1-1-2.4
configVersion = 1.3.4

# External plugins:
springBootPluginVersion = 2.4.2
swaggerGradlePluginVersion = 2.15.1
spotlessPluginVersion = 3.24.2
errorpronePluginVersion = 0.8.1
jibPluginVersion = 1.5.1

# External tools:
checkStyleVersion = 8.21
googleJavaFormatVersion = 1.7
errorproneJavacVersion = 9+181-r4173-1
errorproneVersion = 2.3.3

# Docker settings
dockerRepositoryPrefix = harbor.h2o.ai/opsh2oai/h2oai/
dockerIncludePython = true

# Increase timeouts to avoid read error from OSS Nexus
# See:
#   - https://stackoverflow.com/questions/23257499/how-to-use-maven-or-gradle-on-an-unreliable-network
#   - https://github.com/gradle/gradle/issues/4629
systemProp.org.gradle.internal.http.connectionTimeout=300000
systemProp.org.gradle.internal.http.socketTimeout=300000
